{"version":3,"file":"ScoringCard.js","names":["_react","_interopRequireDefault","require","_lodashEs","_propTypes","_reactRedux","_i18n","_frontendPlatform","_paragon","_redux","_SettingsOption","_messages","_hooks","_problem","_jsxRuntime","obj","__esModule","default","ownKeys","e","r","t","Object","keys","getOwnPropertySymbols","o","filter","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","arguments","length","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","key","value","_toPropertyKey","configurable","writable","i","_toPrimitive","String","Symbol","toPrimitive","call","TypeError","Number","ScoringCard","_ref","scoring","defaultValue","updateSettings","intl","studioEndpointUrl","learningContextId","isLibrary","isGradingMethodEnabled","getConfig","ENABLE_GRADING_METHOD_IN_PROBLEMS","handleUnlimitedChange","handleMaxAttemptChange","handleWeightChange","handleGradingMethodChange","handleOnChange","attemptDisplayValue","scoringCardHooks","getScoringSummary","weight","attempts","unlimited","gradingMethod","summary","formatMessage","messages","weightSummary","fromCharCode","unlimitedAttemptsSummary","attemptsSummary","gradingMethodSummary","GradingMethod","jsxs","title","scoringSettingsTitle","number","className","children","jsx","FormattedMessage","scoringSettingsLabelWithGradingMethod","scoringSettingsLabel","Form","Group","Control","as","onChange","floatingLabel","scoringGradingMethodInputLabel","values","GradingMethodKeys","map","optionDisplayName","Feedback","gradingMethodHint","type","scoringWeightInputLabel","weightHint","onBlur","scoringAttemptsInputLabel","disabled","attemptsHint","Checkbox","checked","_","isNil","unlimitedAttemptsCheckboxLabel","Hyperlink","destination","target","advancedSettingsLinkText","exports","propTypes","intlShape","isRequired","PropTypes","any","func","string","bool","defaultProps","mapStateToProps","state","selectors","app","mapDispatchToProps","_default","injectIntl","connect"],"sources":["../../../../../../../../src/editors/containers/ProblemEditor/components/EditProblemView/SettingsWidget/settingsComponents/ScoringCard.jsx"],"sourcesContent":["import React from 'react';\nimport _ from 'lodash-es';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { FormattedMessage, injectIntl, intlShape } from '@edx/frontend-platform/i18n';\nimport { getConfig } from '@edx/frontend-platform';\nimport { Form, Hyperlink } from '@openedx/paragon';\nimport { selectors } from '../../../../../../data/redux';\nimport SettingsOption from '../SettingsOption';\nimport messages from '../messages';\nimport { scoringCardHooks } from '../hooks';\nimport { GradingMethod, GradingMethodKeys } from '../../../../../../data/constants/problem';\n\nexport const ScoringCard = ({\n  scoring,\n  defaultValue,\n  updateSettings,\n  // inject\n  intl,\n  // redux\n  studioEndpointUrl,\n  learningContextId,\n  isLibrary,\n}) => {\n  debugger;\n  const isGradingMethodEnabled = getConfig().ENABLE_GRADING_METHOD_IN_PROBLEMS;\n  const {\n    handleUnlimitedChange,\n    handleMaxAttemptChange,\n    handleWeightChange,\n    handleGradingMethodChange,\n    handleOnChange,\n    attemptDisplayValue,\n  } = scoringCardHooks(scoring, updateSettings, defaultValue);\n\n  const getScoringSummary = (weight, attempts, unlimited, gradingMethod) => {\n    let summary = intl.formatMessage(messages.weightSummary, { weight });\n    summary += ` ${String.fromCharCode(183)} `;\n    summary += unlimited\n      ? intl.formatMessage(messages.unlimitedAttemptsSummary)\n      : intl.formatMessage(messages.attemptsSummary, { attempts: attempts || defaultValue });\n    if (isGradingMethodEnabled) {\n      summary += ` ${String.fromCharCode(183)} `;\n      summary += intl.formatMessage(messages.gradingMethodSummary, {\n        gradingMethod: intl.formatMessage(GradingMethod[gradingMethod]),\n      });\n    }\n    return summary;\n  };\n\n  return (\n    <SettingsOption\n      title={intl.formatMessage(messages.scoringSettingsTitle)}\n      summary={\n        getScoringSummary(\n          scoring.weight,\n          scoring.attempts.number,\n          scoring.attempts.unlimited,\n          scoring.gradingMethod,\n        )\n      }\n      className=\"scoringCard\"\n    >\n      <div className=\"mb-4\">\n        {isGradingMethodEnabled && <FormattedMessage {...messages.scoringSettingsLabelWithGradingMethod} />}\n        {!isGradingMethodEnabled && <FormattedMessage {...messages.scoringSettingsLabel} />}\n      </div>\n      {isGradingMethodEnabled && (\n      <Form.Group>\n        <Form.Control\n          as=\"select\"\n          value={scoring.gradingMethod}\n          onChange={handleGradingMethodChange}\n          floatingLabel={intl.formatMessage(messages.scoringGradingMethodInputLabel)}\n        >\n          {Object.values(GradingMethodKeys).map((gradingMethod) => {\n            const optionDisplayName = GradingMethod[gradingMethod];\n            return (\n              <option\n                key={gradingMethod}\n                value={gradingMethod}\n              >\n                {intl.formatMessage(optionDisplayName)}\n              </option>\n            );\n          })}\n        </Form.Control>\n        <Form.Control.Feedback>\n          <FormattedMessage {...messages.gradingMethodHint} />\n        </Form.Control.Feedback>\n      </Form.Group>\n      )}\n      <Form.Group>\n        <Form.Control\n          type=\"number\"\n          value={scoring.weight}\n          onChange={handleWeightChange}\n          floatingLabel={intl.formatMessage(messages.scoringWeightInputLabel)}\n        />\n        <Form.Control.Feedback>\n          <FormattedMessage {...messages.weightHint} />\n        </Form.Control.Feedback>\n      </Form.Group>\n      <Form.Group>\n        <Form.Control\n          value={attemptDisplayValue}\n          onChange={handleOnChange}\n          onBlur={handleMaxAttemptChange}\n          floatingLabel={intl.formatMessage(messages.scoringAttemptsInputLabel)}\n          disabled={scoring.attempts.unlimited}\n        />\n        <Form.Control.Feedback>\n          <FormattedMessage {...messages.attemptsHint} />\n        </Form.Control.Feedback>\n        <Form.Checkbox\n          className=\"mt-3 decoration-control-label\"\n          checked={scoring.attempts.unlimited}\n          onChange={handleUnlimitedChange}\n          disabled={!_.isNil(defaultValue)}\n        >\n          <div className=\"x-small\">\n            <FormattedMessage {...messages.unlimitedAttemptsCheckboxLabel} />\n          </div>\n        </Form.Checkbox>\n      </Form.Group>\n      {!isLibrary && (\n        <Hyperlink destination={`${studioEndpointUrl}/settings/advanced/${learningContextId}#max_attempts`} target=\"_blank\">\n          <FormattedMessage {...messages.advancedSettingsLinkText} />\n        </Hyperlink>\n      )}\n    </SettingsOption>\n  );\n};\n\nScoringCard.propTypes = {\n  intl: intlShape.isRequired,\n  // eslint-disable-next-line\n  scoring: PropTypes.any.isRequired,\n  updateSettings: PropTypes.func.isRequired,\n  defaultValue: PropTypes.number,\n  // redux\n  studioEndpointUrl: PropTypes.string.isRequired,\n  learningContextId: PropTypes.string,\n  isLibrary: PropTypes.bool.isRequired,\n};\n\nScoringCard.defaultProps = {\n  learningContextId: null,\n  defaultValue: null,\n};\n\nexport const mapStateToProps = (state) => ({\n  studioEndpointUrl: selectors.app.studioEndpointUrl(state),\n  learningContextId: selectors.app.learningContextId(state),\n  isLibrary: selectors.app.isLibrary(state),\n});\n\nexport const mapDispatchToProps = {};\n\nexport default injectIntl(connect(mapStateToProps, mapDispatchToProps)(ScoringCard));\n"],"mappings":"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"}