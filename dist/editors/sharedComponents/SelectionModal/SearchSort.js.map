{"version":3,"file":"SearchSort.js","names":["_react","_interopRequireDefault","require","_propTypes","_paragon","_icons","_i18n","_messages","_utils","_jsxRuntime","obj","__esModule","default","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","value","_toPropertyKey","configurable","writable","arg","_toPrimitive","String","input","hint","prim","Symbol","toPrimitive","undefined","res","call","TypeError","Number","SearchSort","_ref","searchString","onSearchChange","clearSearchString","sortBy","onSortClick","filterBy","onFilterClick","filterKeys","filterMessages","showSwitch","switchMessage","onSwitchClick","intl","useIntl","jsxs","ActionRow","children","jsx","Form","Group","style","margin","Control","autoFocus","onChange","placeholder","formatMessage","messages","searchPlaceholder","trailingElement","IconButton","alt","clearSearch","iconAs","Icon","invertColors","isActive","onClick","size","src","Close","Search","Spacer","SelectMenu","variant","className","sortKeys","map","MenuItem","defaultSelected","iconAfter","Check","FormattedMessage","whiteSpace","sortMessages","Dropdown","Toggle","id","Menu","Item","Fragment","SwitchSet","name","isInline","Switch","floatLabelLeft","exports","defaultProps","propTypes","PropTypes","string","isRequired","func","shape","bool","_default"],"sources":["../../../../src/editors/sharedComponents/SelectionModal/SearchSort.jsx"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  ActionRow, Dropdown, Form, Icon, IconButton, SelectMenu, MenuItem,\n} from '@edx/paragon';\nimport { Check, Close, Search } from '@edx/paragon/icons';\nimport {\n  FormattedMessage,\n  useIntl,\n} from '@edx/frontend-platform/i18n';\n\nimport messages from './messages';\nimport './index.scss';\nimport { sortKeys, sortMessages } from '../../containers/VideoGallery/utils';\n\nexport const SearchSort = ({\n  searchString,\n  onSearchChange,\n  clearSearchString,\n  sortBy,\n  onSortClick,\n  filterBy,\n  onFilterClick,\n  filterKeys,\n  filterMessages,\n  showSwitch,\n  switchMessage,\n  onSwitchClick,\n}) => {\n  const intl = useIntl();\n  return (\n    <ActionRow>\n      <Form.Group style={{ margin: 0 }}>\n        <Form.Control\n          autoFocus\n          onChange={onSearchChange}\n          placeholder={intl.formatMessage(messages.searchPlaceholder)}\n          trailingElement={\n            searchString\n              ? (\n                <IconButton\n                  alt={intl.formatMessage(messages.clearSearch)}\n                  iconAs={Icon}\n                  invertColors\n                  isActive\n                  onClick={clearSearchString}\n                  size=\"sm\"\n                  src={Close}\n                />\n              )\n              : <Icon src={Search} />\n          }\n          value={searchString}\n        />\n      </Form.Group>\n\n      { !showSwitch && <ActionRow.Spacer /> }\n      <SelectMenu variant=\"link\" className=\"search-sort-menu\">\n        {Object.keys(sortKeys).map(key => (\n          <MenuItem\n            key={key}\n            onClick={onSortClick(key)}\n            defaultSelected={key === sortBy}\n            iconAfter={(key === sortBy) ? Check : null}\n          >\n            <span className=\"search-sort-menu-by\">\n              <FormattedMessage {...messages.sortBy} />\n              <span style={{ whiteSpace: 'pre-wrap' }}> </span>\n            </span>\n            <FormattedMessage {...sortMessages[key]} />\n          </MenuItem>\n        ))}\n      </SelectMenu>\n\n      { onFilterClick && (\n      <Dropdown>\n        <Dropdown.Toggle\n          data-testid=\"dropdown-filter\"\n          className=\"text-gray-700\"\n          id=\"gallery-filter-button\"\n          variant=\"tertiary\"\n        >\n          <FormattedMessage {...filterMessages[filterBy]} />\n        </Dropdown.Toggle>\n        <Dropdown.Menu>\n          {Object.keys(filterKeys).map(key => (\n            <Dropdown.Item data-testid={`dropdown-filter-${key}`} key={key} onClick={onFilterClick(key)}>\n              <FormattedMessage {...filterMessages[key]} />\n            </Dropdown.Item>\n          ))}\n        </Dropdown.Menu>\n      </Dropdown>\n      )}\n\n      { showSwitch && (\n        <>\n          <ActionRow.Spacer />\n          <Form.SwitchSet\n            name=\"switch\"\n            onChange={onSwitchClick}\n            isInline\n          >\n            <Form.Switch className=\"text-gray-700\" value=\"switch-value\" floatLabelLeft>\n              <FormattedMessage {...switchMessage} />\n            </Form.Switch>\n          </Form.SwitchSet>\n        </>\n      )}\n\n    </ActionRow>\n  );\n};\n\nSearchSort.defaultProps = {\n  filterBy: '',\n  onFilterClick: null,\n  filterKeys: null,\n  filterMessages: null,\n  showSwitch: false,\n  onSwitchClick: null,\n};\n\nSearchSort.propTypes = {\n  searchString: PropTypes.string.isRequired,\n  onSearchChange: PropTypes.func.isRequired,\n  clearSearchString: PropTypes.func.isRequired,\n  sortBy: PropTypes.string.isRequired,\n  onSortClick: PropTypes.func.isRequired,\n  filterBy: PropTypes.string,\n  onFilterClick: PropTypes.func,\n  filterKeys: PropTypes.shape({}),\n  filterMessages: PropTypes.shape({}),\n  showSwitch: PropTypes.bool,\n  switchMessage: PropTypes.shape({}).isRequired,\n  onSwitchClick: PropTypes.func,\n};\n\nexport default SearchSort;\n"],"mappings":"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"}