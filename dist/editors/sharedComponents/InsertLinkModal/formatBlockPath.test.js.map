{"version":3,"file":"formatBlockPath.test.js","names":["_formatBlockPath","_interopRequireDefault","require","obj","__esModule","default","describe","test","path","formattedPath","formatBlockPath","expect","toEqual","title","subTitle"],"sources":["../../../../src/editors/sharedComponents/InsertLinkModal/formatBlockPath.test.js"],"sourcesContent":["import formatBlockPath from './formatBlockPath';\n\ndescribe('formatBlockPath function', () => {\n  test('formats a simple path with title and subtitle', () => {\n    const path = 'Root / Child 1 / Grandchild';\n    const formattedPath = formatBlockPath(path);\n    expect(formattedPath).toEqual({\n      title: 'Grandchild',\n      subTitle: 'Root / Child 1',\n    });\n  });\n\n  test('handles an empty title by using the previous part as title', () => {\n    const path = 'Root / Child 1 / ';\n    const formattedPath = formatBlockPath(path);\n    expect(formattedPath).toEqual({\n      title: 'Child 1',\n      subTitle: 'Root / Child 1',\n    });\n  });\n\n  test('handles an empty path by returning an empty title and subtitle', () => {\n    const path = '';\n    const formattedPath = formatBlockPath(path);\n    expect(formattedPath).toEqual({\n      title: '',\n      subTitle: '',\n    });\n  });\n\n  test('handles whitespace in the title by using the previous part as title', () => {\n    const path = 'Root / Child 1 /   ';\n    const formattedPath = formatBlockPath(path);\n    expect(formattedPath).toEqual({\n      title: 'Child 1',\n      subTitle: 'Root / Child 1',\n    });\n  });\n\n  test('handles a path with only one part by using it as the title', () => {\n    const path = 'SinglePart';\n    const formattedPath = formatBlockPath(path);\n    expect(formattedPath).toEqual({\n      title: 'SinglePart',\n      subTitle: '',\n    });\n  });\n});\n"],"mappings":";;AAAA,IAAAA,gBAAA,GAAAC,sBAAA,CAAAC,OAAA;AAAgD,SAAAD,uBAAAE,GAAA,WAAAA,GAAA,IAAAA,GAAA,CAAAC,UAAA,GAAAD,GAAA,KAAAE,OAAA,EAAAF,GAAA;AAEhDG,QAAQ,CAAC,0BAA0B,EAAE,MAAM;EACzCC,IAAI,CAAC,+CAA+C,EAAE,MAAM;IAC1D,MAAMC,IAAI,GAAG,6BAA6B;IAC1C,MAAMC,aAAa,GAAG,IAAAC,wBAAe,EAACF,IAAI,CAAC;IAC3CG,MAAM,CAACF,aAAa,CAAC,CAACG,OAAO,CAAC;MAC5BC,KAAK,EAAE,YAAY;MACnBC,QAAQ,EAAE;IACZ,CAAC,CAAC;EACJ,CAAC,CAAC;EAEFP,IAAI,CAAC,4DAA4D,EAAE,MAAM;IACvE,MAAMC,IAAI,GAAG,mBAAmB;IAChC,MAAMC,aAAa,GAAG,IAAAC,wBAAe,EAACF,IAAI,CAAC;IAC3CG,MAAM,CAACF,aAAa,CAAC,CAACG,OAAO,CAAC;MAC5BC,KAAK,EAAE,SAAS;MAChBC,QAAQ,EAAE;IACZ,CAAC,CAAC;EACJ,CAAC,CAAC;EAEFP,IAAI,CAAC,gEAAgE,EAAE,MAAM;IAC3E,MAAMC,IAAI,GAAG,EAAE;IACf,MAAMC,aAAa,GAAG,IAAAC,wBAAe,EAACF,IAAI,CAAC;IAC3CG,MAAM,CAACF,aAAa,CAAC,CAACG,OAAO,CAAC;MAC5BC,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE;IACZ,CAAC,CAAC;EACJ,CAAC,CAAC;EAEFP,IAAI,CAAC,qEAAqE,EAAE,MAAM;IAChF,MAAMC,IAAI,GAAG,qBAAqB;IAClC,MAAMC,aAAa,GAAG,IAAAC,wBAAe,EAACF,IAAI,CAAC;IAC3CG,MAAM,CAACF,aAAa,CAAC,CAACG,OAAO,CAAC;MAC5BC,KAAK,EAAE,SAAS;MAChBC,QAAQ,EAAE;IACZ,CAAC,CAAC;EACJ,CAAC,CAAC;EAEFP,IAAI,CAAC,4DAA4D,EAAE,MAAM;IACvE,MAAMC,IAAI,GAAG,YAAY;IACzB,MAAMC,aAAa,GAAG,IAAAC,wBAAe,EAACF,IAAI,CAAC;IAC3CG,MAAM,CAACF,aAAa,CAAC,CAACG,OAAO,CAAC;MAC5BC,KAAK,EAAE,YAAY;MACnBC,QAAQ,EAAE;IACZ,CAAC,CAAC;EACJ,CAAC,CAAC;AACJ,CAAC,CAAC"}