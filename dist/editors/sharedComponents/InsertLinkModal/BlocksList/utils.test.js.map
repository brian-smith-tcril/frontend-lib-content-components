{"version":3,"file":"utils.test.js","names":["_utils","require","describe","test","result","getSectionsList","expect","toEqual","blocks","block1","id","type","block2","section1","section2","expected","parentBlock","selectedBlock","childrenList","getChildrenFromList","children","child1","child2","toHaveLength","toContainEqual","undefined"],"sources":["../../../../../src/editors/sharedComponents/InsertLinkModal/BlocksList/utils.test.js"],"sourcesContent":["import { getSectionsList, getChildrenFromList } from './utils';\n\ndescribe('BlockList utils', () => {\n  describe('getSectionsList function', () => {\n    test('returns an empty array for an empty blocks object', () => {\n      const result = getSectionsList({});\n      expect(result).toEqual([]);\n    });\n\n    test('returns an empty array if there are no sections in the blocks object', () => {\n      const blocks = {\n        block1: {\n          id: 'block1',\n          type: 'unit',\n        },\n        block2: {\n          id: 'block2',\n          type: 'vertical',\n        },\n      };\n      const result = getSectionsList(blocks);\n      expect(result).toEqual([]);\n    });\n\n    test('returns an array containing sections from the blocks object', () => {\n      const blocks = {\n        section1: {\n          id: 'section1',\n          type: 'chapter',\n        },\n        block1: {\n          id: 'block1',\n          type: 'unit',\n        },\n        section2: {\n          id: 'section2',\n          type: 'chapter',\n        },\n        block2: {\n          id: 'block2',\n          type: 'vertical',\n        },\n      };\n      const result = getSectionsList(blocks);\n      const expected = [\n        {\n          id: 'section1',\n          type: 'chapter',\n        },\n        {\n          id: 'section2',\n          type: 'chapter',\n        },\n      ];\n      expect(result).toEqual(expected);\n    });\n  });\n\n  describe('getChildrenFromList function', () => {\n    test('returns an empty array when blockSelected has no children', () => {\n      const blocks = {\n        parentBlock: {\n          id: 'parentBlock',\n        },\n      };\n\n      const selectedBlock = blocks.parentBlock;\n      const childrenList = getChildrenFromList(selectedBlock, blocks);\n\n      expect(childrenList).toEqual([]);\n    });\n\n    test('returns an array of child blocks when blockSelected has children', () => {\n      const blocks = {\n        parentBlock: {\n          id: 'parentBlock',\n          children: ['child1', 'child2'],\n        },\n        child1: {\n          id: 'child1',\n        },\n        child2: {\n          id: 'child2',\n        },\n      };\n\n      const selectedBlock = blocks.parentBlock;\n      const childrenList = getChildrenFromList(selectedBlock, blocks);\n\n      expect(childrenList).toHaveLength(2);\n      expect(childrenList).toContainEqual(blocks.child1);\n      expect(childrenList).toContainEqual(blocks.child2);\n    });\n\n    test('returns an empty array when blockSelected.children is undefined', () => {\n      const blocks = {\n        parentBlock: {\n          id: 'parentBlock',\n          children: undefined,\n        },\n      };\n\n      const selectedBlock = blocks.parentBlock;\n      const childrenList = getChildrenFromList(selectedBlock, blocks);\n\n      expect(childrenList).toEqual([]);\n    });\n\n    test('returns an empty array when blockSelected.children is an empty array', () => {\n      const blocks = {\n        parentBlock: {\n          id: 'parentBlock',\n          children: [],\n        },\n      };\n\n      const selectedBlock = blocks.parentBlock;\n      const childrenList = getChildrenFromList(selectedBlock, blocks);\n\n      expect(childrenList).toEqual([]);\n    });\n  });\n});\n"],"mappings":"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"}