{"version":3,"file":"api.test.js","names":["_auth","require","_frontendPlatform","_api","jest","mock","getAuthenticatedHttpClient","fn","getConfig","camelCaseObject","obj","describe","mockCourseId","mockBlocks","block_key","id","block_id","lms_web_url","legacy_web_url","student_view_url","type","display_name","children","block_children_1","block_children_2","mockResponseData","data","root","blocks","mockConfig","LMS_BASE_URL","beforeEach","mockReturnValue","get","mockResolvedValue","test","response","getBlocksFromCourse","expect","toEqual","toHaveBeenCalledWith","mockEmptyResponse","errorMessage","mockRejectedValue","Error","rejects","toThrow"],"sources":["../../../../src/editors/sharedComponents/InsertLinkModal/api.test.js"],"sourcesContent":["import { getAuthenticatedHttpClient } from '@edx/frontend-platform/auth';\nimport { getConfig } from '@edx/frontend-platform';\n\nimport { getBlocksFromCourse } from './api';\n\njest.mock('@edx/frontend-platform/auth', () => ({\n  getAuthenticatedHttpClient: jest.fn(),\n}));\njest.mock('@edx/frontend-platform', () => ({\n  getConfig: jest.fn(),\n  camelCaseObject: jest.fn((obj) => obj),\n}));\n\ndescribe('getTopicsList function', () => {\n  const mockCourseId = 'course123';\n  const mockBlocks = {\n    block_key: {\n      id: 'block-key',\n      block_id: 'edx_block-1',\n      lms_web_url: 'http://localhost/weburl',\n      legacy_web_url: 'http://localhost/legacy',\n      student_view_url: 'http://localhost/studentview',\n      type: 'sequential',\n      display_name: 'Any display name',\n      children: ['block_children_1', 'block_children_2'],\n    },\n    block_children_1: {\n      id: 'block-children-1',\n      block_id: 'edx_block-1',\n      lms_web_url: 'http://localhost/weburl',\n      legacy_web_url: 'http://localhost/legacy',\n      student_view_url: 'http://localhost/studentview',\n      type: 'sequential',\n      display_name: 'Block children 1',\n    },\n    block_children_2: {\n      id: 'block-children-2',\n      block_id: 'edx_block-2',\n      lms_web_url: 'http://localhost/weburl',\n      legacy_web_url: 'http://localhost/legacy',\n      student_view_url: 'http://localhost/studentview',\n      type: 'sequential',\n      display_name: 'Block children 2',\n    },\n  };\n\n  const mockResponseData = { data: { root: 'block_key', blocks: mockBlocks } };\n  const mockConfig = { LMS_BASE_URL: 'http://localhost' };\n\n  beforeEach(() => {\n    getConfig.mockReturnValue(mockConfig);\n    getAuthenticatedHttpClient.mockReturnValue({\n      get: jest.fn().mockResolvedValue(mockResponseData),\n    });\n  });\n\n  test('successfully fetches teams list with default parameters', async () => {\n    const response = await getBlocksFromCourse(mockCourseId);\n    expect(response).toEqual(mockResponseData.data);\n    expect(getAuthenticatedHttpClient().get).toHaveBeenCalledWith(\n      `http://localhost/api/courses/v1/blocks/?course_id=${mockCourseId}&all_blocks=true&depth=all&requested_fields=name,parent, display_name,block_type,children`,\n    );\n  });\n\n  test('handles empty response', async () => {\n    const mockEmptyResponse = { data: { root: 'block_key', blocks: {} } };\n    getAuthenticatedHttpClient().get.mockResolvedValue(mockEmptyResponse);\n\n    const response = await getBlocksFromCourse(mockCourseId);\n    expect(response).toEqual(mockEmptyResponse.data);\n  });\n\n  test('handles an API error', async () => {\n    const errorMessage = 'Network error';\n    getAuthenticatedHttpClient().get.mockRejectedValue(new Error(errorMessage));\n\n    await expect(getBlocksFromCourse(mockCourseId)).rejects.toThrow(errorMessage);\n  });\n});\n"],"mappings":"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"}