{"version":3,"file":"utils.js","names":["_lodash","_interopRequireDefault","require","_blockTypes","obj","__esModule","default","addPathToBlocks","block","blocks","blockRoot","parentId","arguments","length","undefined","parentPath","path","displayName","children","forEach","childKey","childBlock","id","exports","formatBlocks","copyBlocks","cloneDeep","Object","keys","key","rootBlock","type","blockTypes","section","isValidURL","url","URL","error"],"sources":["../../../../src/editors/sharedComponents/InsertLinkModal/utils.js"],"sourcesContent":["import cloneDeep from 'lodash.clonedeep';\n\nimport blockTypes from './blockTypes';\n\n/**\n * Recursively adds path, parent ID, and root status to blocks in a nested structure.\n *\n * @param {Object} block - The current block in the recursion.\n * @param {string} [parentPath=\"\"] - The path of the parent block.\n * @param {Object} blocks - The collection of blocks.\n * @param {string} blockRoot - The key of the root block.\n * @param {string|null} [parentId=null] - The ID of the parent block.\n */\nexport const addPathToBlocks = (block, blocks, blockRoot, parentId = null, parentPath = '') => {\n  const path = parentPath ? `${parentPath} / ${block.displayName}` : block.displayName;\n  block.path = path;\n  block.parentId = parentId;\n\n  if (block.children && block.children.length > 0) {\n    block.children.forEach(childKey => {\n      const childBlock = blocks[childKey];\n      addPathToBlocks(childBlock, blocks, blockRoot, block.id, path);\n    });\n  }\n};\n\n/**\n * Formats the blocks by adding path information to each block.\n *\n * @param {Object} blocks - The blocks to be formatted.\n * @param {string} blockRoot - The key of the root block.\n * @returns {Object} - The formatted blocks with added path information.\n */\nexport const formatBlocks = (blocks, blockRoot) => {\n  const copyBlocks = cloneDeep(blocks);\n  Object.keys(copyBlocks).forEach(key => {\n    const block = copyBlocks[key];\n    const rootBlock = copyBlocks[blockRoot];\n    const parentPath = block.type === blockTypes.section ? rootBlock.displayName : '';\n\n    addPathToBlocks(block, copyBlocks, blockRoot, null, parentPath);\n  });\n\n  return copyBlocks;\n};\n\n/**\n * Validates a URL using a regular expression.\n *\n * @param {string} url - The URL to be validated.\n * @returns {boolean} - True if the URL is valid, false otherwise.\n */\nexport const isValidURL = (url) => {\n  try {\n    // eslint-disable-next-line no-new\n    new URL(url);\n    return true;\n  } catch (error) {\n    return false;\n  }\n};\n"],"mappings":";;;;;;AAAA,IAAAA,OAAA,GAAAC,sBAAA,CAAAC,OAAA;AAEA,IAAAC,WAAA,GAAAF,sBAAA,CAAAC,OAAA;AAAsC,SAAAD,uBAAAG,GAAA,WAAAA,GAAA,IAAAA,GAAA,CAAAC,UAAA,GAAAD,GAAA,KAAAE,OAAA,EAAAF,GAAA;AAEtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAMG,eAAe,GAAG,SAAAA,CAACC,KAAK,EAAEC,MAAM,EAAEC,SAAS,EAAuC;EAAA,IAArCC,QAAQ,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,IAAI;EAAA,IAAEG,UAAU,GAAAH,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,EAAE;EACxF,MAAMI,IAAI,GAAGD,UAAU,GAAI,GAAEA,UAAW,MAAKP,KAAK,CAACS,WAAY,EAAC,GAAGT,KAAK,CAACS,WAAW;EACpFT,KAAK,CAACQ,IAAI,GAAGA,IAAI;EACjBR,KAAK,CAACG,QAAQ,GAAGA,QAAQ;EAEzB,IAAIH,KAAK,CAACU,QAAQ,IAAIV,KAAK,CAACU,QAAQ,CAACL,MAAM,GAAG,CAAC,EAAE;IAC/CL,KAAK,CAACU,QAAQ,CAACC,OAAO,CAACC,QAAQ,IAAI;MACjC,MAAMC,UAAU,GAAGZ,MAAM,CAACW,QAAQ,CAAC;MACnCb,eAAe,CAACc,UAAU,EAAEZ,MAAM,EAAEC,SAAS,EAAEF,KAAK,CAACc,EAAE,EAAEN,IAAI,CAAC;IAChE,CAAC,CAAC;EACJ;AACF,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AANAO,OAAA,CAAAhB,eAAA,GAAAA,eAAA;AAOO,MAAMiB,YAAY,GAAGA,CAACf,MAAM,EAAEC,SAAS,KAAK;EACjD,MAAMe,UAAU,GAAG,IAAAC,eAAS,EAACjB,MAAM,CAAC;EACpCkB,MAAM,CAACC,IAAI,CAACH,UAAU,CAAC,CAACN,OAAO,CAACU,GAAG,IAAI;IACrC,MAAMrB,KAAK,GAAGiB,UAAU,CAACI,GAAG,CAAC;IAC7B,MAAMC,SAAS,GAAGL,UAAU,CAACf,SAAS,CAAC;IACvC,MAAMK,UAAU,GAAGP,KAAK,CAACuB,IAAI,KAAKC,mBAAU,CAACC,OAAO,GAAGH,SAAS,CAACb,WAAW,GAAG,EAAE;IAEjFV,eAAe,CAACC,KAAK,EAAEiB,UAAU,EAAEf,SAAS,EAAE,IAAI,EAAEK,UAAU,CAAC;EACjE,CAAC,CAAC;EAEF,OAAOU,UAAU;AACnB,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AALAF,OAAA,CAAAC,YAAA,GAAAA,YAAA;AAMO,MAAMU,UAAU,GAAIC,GAAG,IAAK;EACjC,IAAI;IACF;IACA,IAAIC,GAAG,CAACD,GAAG,CAAC;IACZ,OAAO,IAAI;EACb,CAAC,CAAC,OAAOE,KAAK,EAAE;IACd,OAAO,KAAK;EACd;AACF,CAAC;AAACd,OAAA,CAAAW,UAAA,GAAAA,UAAA"}