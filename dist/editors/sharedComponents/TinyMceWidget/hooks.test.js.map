{"version":3,"file":"hooks.test.js","names":["_react","_interopRequireDefault","require","_i18n","_testUtils","_tinyMCE","_utils","_pluginConfig","_module","_interopRequireWildcard","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","prototype","hasOwnProperty","call","i","set","obj","ownKeys","keys","getOwnPropertySymbols","o","filter","enumerable","push","apply","_objectSpread","arguments","length","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","key","value","_toPropertyKey","configurable","writable","_toPrimitive","String","Symbol","toPrimitive","TypeError","Number","jest","mock","requireActual","createRef","fn","val","ref","useRef","current","useEffect","useCallback","cb","prereqs","useIntl","state","MockUseState","module","moduleKeys","keyStore","hook","output","editorImageWidth","editorImageHeight","mockNode","src","alt","width","height","initialContentHeight","initialContentWidth","mockNodeWithInitialContentDimensions","mockEditorWithSelection","selection","getNode","mockImage","displayName","contentType","dateAdded","url","externalUrl","portableUrl","thumbnail","locked","staticFullUrl","id","mockAssets","mockEditorContentHtml","mockImagesRef","describe","beforeEach","clearAllMocks","testGetter","isImageModalOpen","isSourceCodeModalOpen","imageSelection","isInsertLinkModalOpen","afterEach","restore","it","matchingImages","tinyMceHTML","expect","detectImageMatchingError","toBe","test","addButton","addIcon","addToggleButton","openImgModal","openSourceCodeModal","openInsertLinkModal","translations","setImage","updateContent","editorType","lmsEndpointUrl","editor","ui","registry","on","mockOpenModalWithImage","args","openModalWithSelectedImage","expectedSettingsAction","toggleCodeFormatting","any","Function","toggleLabelFormatting","setupCodeFormatting","spyOn","mockImplementationOnce","setupCustomBehavior","calls","toEqual","tinyMCE","textToSpeechIcon","arrayContaining","buttons","imageUploadButton","icon","tooltip","onAction","editImageSettings","code","text","toContainEqual","codeBlock","onSetup","not","toHaveBeenCalled","getContent","content","parseContentForLabels","toHaveBeenCalledWith","setContent","imageUrls","replaceStaticwithAsset","editorValue","assets","setAssetToStaticUrl","props","editorContentHtml","studioEndpointUrl","images","isLibrary","evt","setEditorRef","initializeEditor","editorConfig","pluginProps","init","plugins","pluginConfig","imagetools_toolbar","imageToolbar","toolbar","config","quickbars_insert_toolbar","quickbarsInsertToolbar","quickbars_selection_toolbar","quickbarsSelectionToolbar","placeholder","onInit","initialValue","setup","setSelection","fetchImageUrls","emptyAssets","sOmEaSsET","emptyFilterAssets","filterAssets","FilteredAssets","hookKey","imgModalToggle","isImgOpen","stateVals","setState","closeImgModal","editorRef","focus","sourceCodeModalToggle","isSourceCodeOpen","closeSourceCodeModal","insertLinkModalToggle","isInsertLinkOpen","closeInsertLinkModal","useTranslations","intl","createIntl","locale","messages","React","mockReturnValue","intlFormatMessage","formatMessage","message","defaultMessage","testMessages","message1","message2","result","undefined","altText","selectedImage","clearSelection","toMatch","imageMatchRegex","match","matchImageStringsByIdentifiers","b","imagesRef","addImagesAndDimensionsToRef","getImageResizeHandler","toHaveBeenCalledTimes","objectContaining","unchangedImg","foundMatch","updateImageDimensions","imageToHaveBeenUpdated","find","img","imageToHaveBeenUnchanged","toBeFalsy"],"sources":["../../../../src/editors/sharedComponents/TinyMceWidget/hooks.test.js"],"sourcesContent":["import React from 'react';\nimport { createIntl, useIntl } from '@edx/frontend-platform/i18n';\nimport { MockUseState } from '../../../testUtils';\n\nimport tinyMCE from '../../data/constants/tinyMCE';\nimport { keyStore } from '../../utils';\nimport pluginConfig from './pluginConfig';\nimport * as module from './hooks';\n\njest.mock('react', () => ({\n  ...jest.requireActual('react'),\n  createRef: jest.fn(val => ({ ref: val })),\n  useRef: jest.fn(val => ({ current: val })),\n  useEffect: jest.fn(),\n  useCallback: (cb, prereqs) => ({ cb, prereqs }),\n}));\n\njest.mock('@edx/frontend-platform/i18n', () => ({\n  ...jest.requireActual('@edx/frontend-platform/i18n'),\n  useIntl: jest.fn(),\n}));\n\nconst state = new MockUseState(module);\nconst moduleKeys = keyStore(module);\n\nlet hook;\nlet output;\n\nconst editorImageWidth = 2022;\nconst editorImageHeight = 1619;\n\nconst mockNode = {\n  src: 'http://localhost:18000/asset-v1:TestX+Test01+Test0101+type@asset+block/DALL_E_2023-03-10.png',\n  alt: 'aLt tExt',\n  width: editorImageWidth,\n  height: editorImageHeight,\n};\n\nconst initialContentHeight = 150;\nconst initialContentWidth = 100;\nconst mockNodeWithInitialContentDimensions = { ...mockNode, width: initialContentWidth, height: initialContentHeight };\nconst mockEditorWithSelection = { selection: { getNode: () => mockNode } };\n\nconst mockImage = {\n  displayName: 'DALLÂ·E 2023-03-10.png',\n  contentType: 'image/png',\n  dateAdded: 1682009100000,\n  url: '/asset-v1:TestX+Test01+Test0101+type@asset+block@DALL_E_2023-03-10.png',\n  externalUrl: 'http://localhost:18000/asset-v1:TestX+Test01+Test0101+type@asset+block@DALL_E_2023-03-10.png',\n  portableUrl: '/static/DALL_E_2023-03-10.png',\n  thumbnail: '/asset-v1:TestX+Test01+Test0101+type@thumbnail+block@DALL_E_2023-03-10.jpg',\n  locked: false,\n  staticFullUrl: '/assets/courseware/v1/af2bf9ac70804e54c534107160a8e51e/asset-v1:TestX+Test01+Test0101+type@asset+block@DALL_E_2023-03-10.png',\n  id: 'asset-v1:TestX+Test01+Test0101+type@asset+block@DALL_E_2023-03-10.png',\n  width: initialContentWidth,\n  height: initialContentHeight,\n};\n\nconst mockAssets = {\n  [mockImage.id]: mockImage,\n};\n\nconst mockEditorContentHtml = `\n  <p>\n    <img\n      src=\"/assets/courseware/v1/7b41573468a356ca8dc975158e388386/asset-v1:TestX+Test01+Test0101+type@asset+block/DALL_E_2023-03-10.png\"\n      alt=\"\"\n      width=\"${initialContentWidth}\"\n      height=\"${initialContentHeight}\">\n    </img>\n  </p>\n`;\n\nconst mockImagesRef = { current: [mockImage] };\n\ndescribe('TinyMceEditor hooks', () => {\n  beforeEach(() => {\n    jest.clearAllMocks();\n    mockImagesRef.current = [mockImage];\n  });\n  describe('state hooks', () => {\n    state.testGetter(state.keys.isImageModalOpen);\n    state.testGetter(state.keys.isSourceCodeModalOpen);\n    state.testGetter(state.keys.imageSelection);\n    state.testGetter(state.keys.isInsertLinkModalOpen);\n  });\n\n  describe('non-state hooks', () => {\n    beforeEach(() => { state.mock(); });\n    afterEach(() => { state.restore(); });\n\n    describe('detectImageMatchingError', () => {\n      it('should detect an error if the matchingImages array is empty', () => {\n        const matchingImages = [];\n        const tinyMceHTML = mockNode;\n        expect(module.detectImageMatchingError({ matchingImages, tinyMceHTML })).toBe(true);\n      });\n      it('should detect an error if the matchingImages array has more than one element', () => {\n        const matchingImages = [mockImage, mockImage];\n        const tinyMceHTML = mockNode;\n        expect(module.detectImageMatchingError({ matchingImages, tinyMceHTML })).toBe(true);\n      });\n      it('should detect an error if the image id does not match the tinyMceHTML src', () => {\n        const matchingImages = [{ ...mockImage, id: 'some-other-id' }];\n        const tinyMceHTML = mockNode;\n        expect(module.detectImageMatchingError({ matchingImages, tinyMceHTML })).toBe(true);\n      });\n      it('should detect an error if the image id matches the tinyMceHTML src, but width and height do not match', () => {\n        const matchingImages = [{ ...mockImage, width: 100, height: 100 }];\n        const tinyMceHTML = mockNode;\n        expect(module.detectImageMatchingError({ matchingImages, tinyMceHTML })).toBe(true);\n      });\n      it('should not detect any errors if id matches src, and width and height match', () => {\n        const matchingImages = [{ ...mockImage, width: mockNode.width, height: mockNode.height }];\n        const tinyMceHTML = mockNode;\n        expect(module.detectImageMatchingError({ matchingImages, tinyMceHTML })).toBe(false);\n      });\n    });\n\n    describe('setupCustomBehavior', () => {\n      test('It calls addButton and addToggleButton in the editor, but openModal is not called', () => {\n        const addButton = jest.fn();\n        const addIcon = jest.fn();\n        const addToggleButton = jest.fn();\n        const openImgModal = jest.fn();\n        const openSourceCodeModal = jest.fn();\n        const openInsertLinkModal = jest.fn();\n        const translations = {};\n        const setImage = jest.fn();\n        const updateContent = jest.fn();\n        const editorType = 'expandable';\n        const lmsEndpointUrl = 'sOmEvaLue.cOm';\n        const editor = {\n          ui: { registry: { addButton, addToggleButton, addIcon } },\n          on: jest.fn(),\n        };\n        const mockOpenModalWithImage = args => ({ openModalWithSelectedImage: args });\n        const expectedSettingsAction = mockOpenModalWithImage({ editor, setImage, openImgModal });\n        const toggleCodeFormatting = expect.any(Function);\n        const toggleLabelFormatting = expect.any(Function);\n        const setupCodeFormatting = expect.any(Function);\n        jest.spyOn(module, moduleKeys.openModalWithSelectedImage)\n          .mockImplementationOnce(mockOpenModalWithImage);\n\n        output = module.setupCustomBehavior({\n          editorType,\n          updateContent,\n          openImgModal,\n          openSourceCodeModal,\n          openInsertLinkModal,\n          translations,\n          setImage,\n          lmsEndpointUrl,\n        })(editor);\n        expect(addIcon.mock.calls).toEqual([['textToSpeech', tinyMCE.textToSpeechIcon]]);\n        expect(addButton.mock.calls).toEqual(expect.arrayContaining([\n          [tinyMCE.buttons.imageUploadButton, { icon: 'image', tooltip: 'Add Image', onAction: openImgModal }],\n          [tinyMCE.buttons.editImageSettings, { icon: 'image', tooltip: 'Edit Image Settings', onAction: expectedSettingsAction }],\n          [tinyMCE.buttons.code, { text: 'HTML', tooltip: 'Source code', onAction: openSourceCodeModal }],\n          ['customLabelButton', {\n            icon: 'textToSpeech',\n            text: 'Label',\n            tooltip: 'Apply a \"Question\" label to specific text, recognized by screen readers. Recommended to improve accessibility.',\n            onAction: toggleLabelFormatting,\n          }],\n        ]));\n        expect(addToggleButton.mock.calls).toContainEqual(\n          expect.arrayContaining([\n            tinyMCE.buttons.codeBlock,\n            {\n              icon: 'sourcecode',\n              tooltip: 'Code Block',\n              onAction: toggleCodeFormatting,\n              onSetup: setupCodeFormatting,\n            },\n          ]),\n        );\n        expect(openImgModal).not.toHaveBeenCalled();\n        expect(editor.on).toHaveBeenCalled();\n      });\n    });\n\n    describe('parseContentForLabels', () => {\n      test('it calls getContent and updateQuestion for some content', () => {\n        const editor = { getContent: jest.fn(() => '<p><label>Some question label</label></p><p>some content <label>around a label</label> followed by more text</p><img src=\"/static/soMEImagEURl1.jpeg\"/>') };\n        const updateContent = jest.fn();\n        const content = '<p><label>Some question label</label></p><p>some content </p><p><label>around a label</label></p><p> followed by more text</p><img src=\"/static/soMEImagEURl1.jpeg\"/>';\n        module.parseContentForLabels({ editor, updateContent });\n        expect(editor.getContent).toHaveBeenCalled();\n        expect(updateContent).toHaveBeenCalledWith(content);\n      });\n      test('it calls getContent and updateQuestion for empty content', () => {\n        const editor = { getContent: jest.fn(() => '') };\n        const updateContent = jest.fn();\n        const content = '';\n        module.parseContentForLabels({ editor, updateContent });\n        expect(editor.getContent).toHaveBeenCalled();\n        expect(updateContent).toHaveBeenCalledWith(content);\n      });\n    });\n\n    describe('replaceStaticwithAsset', () => {\n      test('it calls getContent and setContent for text editor', () => {\n        const editor = { getContent: jest.fn(() => '<img src=\"/static/soMEImagEURl1.jpeg\"/>'), setContent: jest.fn() };\n        const imageUrls = [{ staticFullUrl: '/assets/soMEImagEURl1.jpeg', displayName: 'soMEImagEURl1.jpeg' }];\n        const lmsEndpointUrl = 'sOmEvaLue.cOm';\n        module.replaceStaticwithAsset({ editor, imageUrls, lmsEndpointUrl });\n        expect(editor.getContent).toHaveBeenCalled();\n        expect(editor.setContent).toHaveBeenCalled();\n      });\n      test('it calls getContent and updateContent for expandable editor', () => {\n        const editor = { getContent: jest.fn(() => '<img src=\"/static/soMEImagEURl1.jpeg\"/>') };\n        const imageUrls = [{ staticFullUrl: '/assets/soMEImagEURl1.jpeg', displayName: 'soMEImagEURl1.jpeg' }];\n        const lmsEndpointUrl = 'sOmEvaLue.cOm';\n        const editorType = 'expandable';\n        const updateContent = jest.fn();\n        module.replaceStaticwithAsset({\n          editor,\n          imageUrls,\n          editorType,\n          lmsEndpointUrl,\n          updateContent,\n        });\n        expect(editor.getContent).toHaveBeenCalled();\n        expect(updateContent).toHaveBeenCalled();\n      });\n    });\n    describe('setAssetToStaticUrl', () => {\n      it('returns content with updated img links', () => {\n        const editorValue = '<img src=\"/asset@asset-block/soME_ImagE_URl1\"/> <a href=\"/asset@soMEImagEURl\">testing link</a>';\n        const assets = [\n          { portableUrl: '/static/soMEImagEURl', displayName: 'soMEImagEURl' },\n          { portableUrl: '/static/soME_ImagE_URl1', displayName: 'soME ImagE URl1' },\n        ];\n        const lmsEndpointUrl = 'sOmEvaLue.cOm';\n        const content = module.setAssetToStaticUrl({ editorValue, assets, lmsEndpointUrl });\n        expect(content).toEqual('<img src=\"/static/soME_ImagE_URl1\"/> <a href=\"/static/soMEImagEURl\">testing link</a>');\n      });\n    });\n\n    describe('editorConfig', () => {\n      const props = {\n        editorContentHtml: null,\n        editorType: 'text',\n        lmsEndpointUrl: 'sOmEuRl.cOm',\n        studioEndpointUrl: 'sOmEoThEruRl.cOm',\n        images: mockImagesRef,\n        isLibrary: false,\n        translations: {},\n      };\n      const evt = 'fakeEvent';\n      const editor = 'myEditor';\n      const setupCustomBehavior = args => ({ setupCustomBehavior: args });\n\n      beforeEach(() => {\n        props.setEditorRef = jest.fn();\n        props.openImgModal = jest.fn();\n        props.openSourceCodeModal = jest.fn();\n        props.initializeEditor = jest.fn();\n        props.updateContent = jest.fn();\n        props.openInsertLinkModal = jest.fn();\n        jest.spyOn(module, moduleKeys.setupCustomBehavior)\n          .mockImplementationOnce(setupCustomBehavior);\n        output = module.editorConfig(props);\n      });\n\n      describe('text editor plugins and toolbar', () => {\n        test('It configures plugins and toolbars correctly', () => {\n          const pluginProps = {\n            isLibrary: props.isLibrary,\n            editorType: props.editorType,\n          };\n          expect(output.init.plugins).toEqual(pluginConfig(pluginProps).plugins);\n          expect(output.init.imagetools_toolbar).toEqual(pluginConfig(pluginProps).imageToolbar);\n          expect(output.init.toolbar).toEqual(pluginConfig(pluginProps).toolbar);\n          Object.keys(pluginConfig(pluginProps).config).forEach(key => {\n            expect(output.init[key]).toEqual(pluginConfig(pluginProps).config[key]);\n          });\n          // Commented out as we investigate whether this is only needed for image proxy\n          // expect(output.init.imagetools_cors_hosts).toMatchObject([props.lmsEndpointUrl]);\n        });\n      });\n      describe('text editor plugins and toolbar for content library', () => {\n        test('It configures plugins and toolbars correctly', () => {\n          const pluginProps = {\n            isLibrary: true,\n            editorType: props.editorType,\n          };\n          output = module.editorConfig({ ...props, isLibrary: true });\n          expect(output.init.plugins).toEqual(pluginConfig(pluginProps).plugins);\n          expect(output.init.imagetools_toolbar).toEqual(pluginConfig(pluginProps).imageToolbar);\n          expect(output.init.toolbar).toEqual(pluginConfig(pluginProps).toolbar);\n          expect(output.init.quickbars_insert_toolbar).toEqual(pluginConfig(pluginProps).quickbarsInsertToolbar);\n          expect(output.init.quickbars_selection_toolbar).toEqual(pluginConfig(pluginProps).quickbarsSelectionToolbar);\n          Object.keys(pluginConfig(pluginProps).config).forEach(key => {\n            expect(output.init[key]).toEqual(pluginConfig(pluginProps).config[key]);\n          });\n        });\n      });\n      describe('problem editor question plugins and toolbar', () => {\n        test('It configures plugins and toolbars correctly', () => {\n          const pluginProps = {\n            isLibrary: props.isLibrary,\n            editorType: 'question',\n            placeholder: 'soMEtExT',\n          };\n          output = module.editorConfig({\n            ...props,\n            editorType: 'question',\n            placeholder: 'soMEtExT',\n          });\n          expect(output.init.plugins).toEqual(pluginConfig(pluginProps).plugins);\n          expect(output.init.imagetools_toolbar).toEqual(pluginConfig(pluginProps).imageToolbar);\n          expect(output.init.toolbar).toEqual(pluginConfig(pluginProps).toolbar);\n          expect(output.init.quickbars_insert_toolbar).toEqual(pluginConfig(pluginProps).quickbarsInsertToolbar);\n          expect(output.init.quickbars_selection_toolbar).toEqual(pluginConfig(pluginProps).quickbarsSelectionToolbar);\n          Object.keys(pluginConfig(pluginProps).config).forEach(key => {\n            expect(output.init[key]).toEqual(pluginConfig(pluginProps).config[key]);\n          });\n        });\n      });\n\n      describe('expandable text area plugins and toolbar', () => {\n        test('It configures plugins, toolbars, and quick toolbars correctly', () => {\n          const pluginProps = {\n            isLibrary: props.isLibrary,\n            editorType: 'expandable',\n            placeholder: 'soMEtExT',\n          };\n          output = module.editorConfig({\n            ...props,\n            editorType: 'expandable',\n            placeholder: 'soMEtExT',\n          });\n          expect(output.init.plugins).toEqual(pluginConfig(pluginProps).plugins);\n          expect(output.init.imagetools_toolbar).toEqual(pluginConfig(pluginProps).imageToolbar);\n          expect(output.init.toolbar).toEqual(pluginConfig(pluginProps).toolbar);\n          expect(output.init.quickbars_insert_toolbar).toEqual(pluginConfig(pluginProps).quickbarsInsertToolbar);\n          expect(output.init.quickbars_selection_toolbar).toEqual(pluginConfig(pluginProps).quickbarsSelectionToolbar);\n          Object.keys(pluginConfig(pluginProps).config).forEach(key => {\n            expect(output.init[key]).toEqual(pluginConfig(pluginProps).config[key]);\n          });\n        });\n      });\n      test('It creates an onInit which calls initializeEditor and setEditorRef', () => {\n        output.onInit(evt, editor);\n        expect(props.setEditorRef).toHaveBeenCalledWith(editor);\n        expect(props.initializeEditor).toHaveBeenCalled();\n      });\n      test('It sets the blockvalue to be empty string by default', () => {\n        expect(output.initialValue).toBe('');\n      });\n      test('It sets the blockvalue to be the blockvalue if nonempty', () => {\n        const editorContentHtml = 'SomE hTML content';\n        output = module.editorConfig({ ...props, editorContentHtml });\n        expect(output.initialValue).toBe(editorContentHtml);\n      });\n\n      it('calls setupCustomBehavior on setup', () => {\n        expect(output.init.setup).toEqual(\n          setupCustomBehavior({\n            editorType: props.editorType,\n            updateContent: props.updateContent,\n            openImgModal: props.openImgModal,\n            openSourceCodeModal: props.openSourceCodeModal,\n            setImage: props.setSelection,\n            imageUrls: module.fetchImageUrls(props.images),\n            images: mockImagesRef,\n            lmsEndpointUrl: props.lmsEndpointUrl,\n            openInsertLinkModal: props.openInsertLinkModal,\n            translations: props.translations,\n          }),\n        );\n      });\n    });\n\n    describe('filterAssets', () => {\n      const emptyAssets = {};\n      const assets = { sOmEaSsET: { contentType: 'image/' } };\n      test('returns an empty array', () => {\n        const emptyFilterAssets = module.filterAssets({ assets: emptyAssets });\n        expect(emptyFilterAssets).toEqual([]);\n      });\n      test('returns filtered array of images', () => {\n        const FilteredAssets = module.filterAssets({ assets });\n        expect(FilteredAssets).toEqual([{ contentType: 'image/' }]);\n      });\n    });\n\n    describe('imgModalToggle', () => {\n      const hookKey = state.keys.isImageModalOpen;\n      beforeEach(() => {\n        hook = module.imgModalToggle();\n      });\n      test('isOpen: state value', () => {\n        expect(hook.isImgOpen).toEqual(state.stateVals[hookKey]);\n      });\n      test('openModal: calls setter with true', () => {\n        hook.openImgModal();\n        expect(state.setState[hookKey]).toHaveBeenCalledWith(true);\n      });\n      test('closeModal: calls setter with false', () => {\n        hook.closeImgModal();\n        expect(state.setState[hookKey]).toHaveBeenCalledWith(false);\n      });\n    });\n\n    describe('sourceCodeModalToggle', () => {\n      const editorRef = { current: { focus: jest.fn() } };\n      const hookKey = state.keys.isSourceCodeModalOpen;\n      beforeEach(() => {\n        hook = module.sourceCodeModalToggle(editorRef);\n      });\n      test('isOpen: state value', () => {\n        expect(hook.isSourceCodeOpen).toEqual(state.stateVals[hookKey]);\n      });\n      test('openModal: calls setter with true', () => {\n        hook.openSourceCodeModal();\n        expect(state.setState[hookKey]).toHaveBeenCalledWith(true);\n      });\n      test('closeModal: calls setter with false', () => {\n        hook.closeSourceCodeModal();\n        expect(state.setState[hookKey]).toHaveBeenCalledWith(false);\n      });\n    });\n\n    describe('insertLinkModalToggle', () => {\n      const hookKey = state.keys.isInsertLinkModalOpen;\n      beforeEach(() => {\n        hook = module.insertLinkModalToggle();\n      });\n      test('isInsertLinkOpen: state value', () => {\n        expect(hook.isInsertLinkOpen).toEqual(state.stateVals[hookKey]);\n      });\n      test('openInsertLinkModal: calls setter with true', () => {\n        hook.openInsertLinkModal();\n        expect(state.setState[hookKey]).toHaveBeenCalledWith(true);\n      });\n      test('closeInsertLinkModal: calls setter with false', () => {\n        hook.closeInsertLinkModal();\n        expect(state.setState[hookKey]).toHaveBeenCalledWith(false);\n      });\n    });\n\n    describe('useTranslations', () => {\n      beforeEach(() => {\n        hook = module.useTranslations;\n        const intl = createIntl({\n          locale: 'en',\n          messages: {\n            'app.message1': 'This is message 1',\n            'app.message2': 'This is message 2',\n          },\n        });\n\n        jest.spyOn(React, 'useContext').mockReturnValue(intl);\n\n        const intlFormatMessage = {\n          formatMessage: jest.fn((message) => `Translated: ${message?.defaultMessage}`),\n        };\n\n        useIntl.mockReturnValue(intlFormatMessage);\n      });\n      test('should translate messages correctly', () => {\n        const testMessages = {\n          message1: {\n            id: 'app.message1',\n            defaultMessage: 'This is message 1',\n          },\n          message2: {\n            id: 'app.message2',\n            defaultMessage: 'This is message 2',\n          },\n        };\n\n        const result = hook(testMessages);\n\n        expect(result.message1).toBe('Translated: This is message 1');\n        expect(result.message2).toBe('Translated: This is message 2');\n      });\n\n      test('should return an empty object without messages', () => {\n        const testMessages = {};\n        const result = hook(testMessages);\n        expect(result).toEqual({});\n      });\n\n      test('should handle undefined messages', () => {\n        const testMessages = undefined;\n        const result = hook(testMessages);\n        expect(result).toEqual({});\n      });\n    });\n\n    describe('openModalWithSelectedImage', () => {\n      const setImage = jest.fn();\n      const openImgModal = jest.fn();\n      let editor;\n\n      beforeEach(() => {\n        editor = { selection: { getNode: () => mockNodeWithInitialContentDimensions } };\n        module.openModalWithSelectedImage({\n          editor, images: mockImagesRef, openImgModal, setImage,\n        })();\n      });\n\n      afterEach(() => {\n        jest.clearAllMocks();\n      });\n\n      test('updates React state for selected image to be value stored in editor, adding dimensions from images ref', () => {\n        expect(setImage).toHaveBeenCalledWith({\n          externalUrl: mockNode.src,\n          altText: mockNode.alt,\n          width: mockImage.width,\n          height: mockImage.height,\n        });\n      });\n\n      test('opens image setting modal', () => {\n        expect(openImgModal).toHaveBeenCalled();\n      });\n\n      describe('when images cannot be successfully matched', () => {\n        beforeEach(() => {\n          editor = { selection: { getNode: () => mockNode } };\n          module.openModalWithSelectedImage({\n            editor, images: mockImagesRef, openImgModal, setImage,\n          })();\n        });\n\n        afterEach(() => {\n          jest.clearAllMocks();\n        });\n\n        test('updates React state for selected image to be value stored in editor, setting dimensions to null', () => {\n          expect(setImage).toHaveBeenCalledWith({\n            externalUrl: mockNode.src,\n            altText: mockNode.alt,\n            width: null,\n            height: null,\n          });\n        });\n      });\n    });\n\n    describe('selectedImage hooks', () => {\n      const val = { a: 'VaLUe' };\n      beforeEach(() => {\n        hook = module.selectedImage(val);\n      });\n      test('selection: state value', () => {\n        expect(hook.selection).toEqual(state.stateVals[state.keys.imageSelection]);\n      });\n      test('setSelection: setter for value', () => {\n        expect(hook.setSelection).toEqual(state.setState[state.keys.imageSelection]);\n      });\n      test('clearSelection: calls setter with null', () => {\n        expect(hook.setSelection).not.toHaveBeenCalled();\n        hook.clearSelection();\n        expect(hook.setSelection).toHaveBeenCalledWith(null);\n      });\n    });\n    describe('imageMatchRegex', () => {\n      it('should match a valid image url using \"@\" separators', () => {\n        expect(\n          'http://localhost:18000/asset-v1:TestX+Test01+Test0101+type@asset+block@image-name.png',\n        ).toMatch(module.imageMatchRegex);\n      });\n      it('should match a url including the keywords \"asset-v1\", \"type\", \"block\" in that order', () => {\n        expect(\n          'https://some.completely/made.up///url-with.?!keywords/asset-v1:Some-asset-key?type=some.type.key!block@image-name.png',\n        ).toMatch(module.imageMatchRegex);\n      });\n      it('should not match a url excluding the keyword \"asset-v1\"', () => {\n        expect(\n          'https://some.completely/made.up///url-with.?!keywords/Some-asset-key?type=some.type.key!block@image-name.png',\n        ).not.toMatch(module.imageMatchRegex);\n      });\n      it('should match an identifier including the keywords \"asset-v1\", \"type\", \"block\" using \"/\" separators', () => {\n        expect(\n          'asset-v1:TestX+Test01+Test0101+type/asset+block/image-name.png',\n        ).toMatch(module.imageMatchRegex);\n      });\n      it('should capture values for the keys \"asset-v1\", \"type\", \"block\"', () => {\n        const match = 'asset-v1:TestX+Test01+Test0101+type/asset+block/image-name.png'.match(module.imageMatchRegex);\n        expect(match[1]).toBe('TestX+Test01+Test0101');\n        expect(match[2]).toBe('asset');\n        expect(match[3]).toBe('image-name.png');\n      });\n    });\n\n    describe('matchImageStringsByIdentifiers', () => {\n      it('should be true for an image url and identifier that have the same values for asset-v1, type, and block', () => {\n        const url = 'http://localhost:18000/asset-v1:TestX+Test01+Test0101+type@asset+block@image-name.png';\n        const id = 'asset-v1:TestX+Test01+Test0101+type/asset+block/image-name.png';\n        expect(module.matchImageStringsByIdentifiers(url, id)).toBe(true);\n      });\n      it('should be false for an image url and identifier that have different values for block', () => {\n        const url = 'http://localhost:18000/asset-v1:TestX+Test01+Test0101+type@asset+block@image-name.png';\n        const id = 'asset-v1:TestX+Test01+Test0101+type/asset+block/different-image-name.png';\n        expect(module.matchImageStringsByIdentifiers(url, id)).toBe(false);\n      });\n      it('should return null if it doesnt receive two strings as input', () => {\n        expect(module.matchImageStringsByIdentifiers(['a'], { b: 'c ' })).toBe(null);\n      });\n      it('should return undefined if the strings dont match the regex at all', () => {\n        expect(module.matchImageStringsByIdentifiers('wrong-url', 'blub')).toBe(undefined);\n      });\n    });\n\n    describe('addImagesAndDimensionsToRef', () => {\n      it('should add images to ref', () => {\n        const imagesRef = { current: null };\n        const assets = { ...mockAssets, height: undefined, width: undefined };\n        module.addImagesAndDimensionsToRef(\n          {\n            imagesRef,\n            assets,\n            editorContentHtml: mockEditorContentHtml,\n          },\n        );\n        expect(imagesRef.current).toEqual([mockImage]);\n        expect(imagesRef.current[0].width).toBe(initialContentWidth);\n        expect(imagesRef.current[0].height).toBe(initialContentHeight);\n      });\n    });\n\n    describe('getImageResizeHandler', () => {\n      const setImage = jest.fn();\n\n      it('sets image ref and state to new width', () => {\n        expect(mockImagesRef.current[0].width).toBe(initialContentWidth);\n        module.getImageResizeHandler({ editor: mockEditorWithSelection, imagesRef: mockImagesRef, setImage })();\n\n        expect(setImage).toHaveBeenCalledTimes(1);\n        expect(setImage).toHaveBeenCalledWith(expect.objectContaining({ width: editorImageWidth }));\n        expect(mockImagesRef.current[0].width).not.toBe(initialContentWidth);\n        expect(mockImagesRef.current[0].width).toBe(editorImageWidth);\n      });\n    });\n\n    describe('updateImageDimensions', () => {\n      const unchangedImg = {\n        id: 'asset-v1:TestX+Test01+Test0101+type@asset+block@unchanged-image.png',\n        width: 3,\n        height: 5,\n      };\n      const images = [\n        mockImage,\n        unchangedImg,\n      ];\n\n      it('updates dimensions of correct image in images array', () => {\n        const { result, foundMatch } = module.updateImageDimensions({\n          images, url: mockNode.src, width: 123, height: 321,\n        });\n        const imageToHaveBeenUpdated = result.find(img => img.id === mockImage.id);\n        const imageToHaveBeenUnchanged = result.find(img => img.id === unchangedImg.id);\n\n        expect(imageToHaveBeenUpdated.width).toBe(123);\n        expect(imageToHaveBeenUpdated.height).toBe(321);\n        expect(imageToHaveBeenUnchanged.width).toBe(3);\n        expect(imageToHaveBeenUnchanged.height).toBe(5);\n\n        expect(foundMatch).toBe(true);\n      });\n\n      it('does not update images if id is not found', () => {\n        const { result, foundMatch } = module.updateImageDimensions({\n          images, url: 'not_found', width: 123, height: 321,\n        });\n        expect(result.find(img => img.width === 123 || img.height === 321)).toBeFalsy();\n        expect(foundMatch).toBe(false);\n      });\n    });\n  });\n});\n"],"mappings":"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"}